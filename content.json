{"meta":{"title":"fly6022's Blog","subtitle":"","description":"ヾ(=･ω･=)o 这里是fly6022的个人小站。","author":"fly6022","url":"https://blog.kuri.ink","root":"/"},"pages":[{"title":"404","date":"2020-01-20T13:01:36.000Z","updated":"2025-01-11T08:32:06.375Z","comments":true,"path":"404.html","permalink":"https://blog.kuri.ink/404.html","excerpt":"","text":"404 - Not Found! 点此返回首页"},{"title":"关于我","date":"2019-09-21T15:21:36.000Z","updated":"2025-08-07T07:03:34.874Z","comments":true,"path":"about.html","permalink":"https://blog.kuri.ink/about.html","excerpt":"","text":"😃 关于我 key value nickname fly6022 gender 👦 (he/him) MBTI16 INFP-T tags Coder, 航海技术, 业余无线电 constellation ♋ (6.22-7.22) location Nanjing, China hometown Tangshan, China code JavaScript, Python, C# callsign BA4RKW 🚀 任务清单 ✅ 已完成 2025-03-30 全国计算机等级考试(NCRE)-二级 2024-12-18 取得无线电台执照及电台呼号 BA4RKW 2024-12-16 CRAC业余无线电台操作能力-A 2024-11-23 X99 M-ATX 主机装机成功 2024-10-06 购置手持无线电台 UV-K6 ⛵ 进行中 备考 CET-6 💻 关于博客 key value 网站名称 fly6022’s Blog 网站链接 https://blog.kuri.ink/ 评论系统 Gitalk 渲染器 Hexo 7.3.0 主题 Nexmoe 字体 PlusJakartaSans-Medium, Roboto, Noto Sans SC, Noto Serif SC, Fira Code 隐藏页面 URL 在线笔记本 Notes 📞 联系我 你可以在以下平台找到我. E-mail: cl@kuri.ink GitHub: https://github.com/fly6022 社交平台： 哔哩哔哩：191078710 QRZ.com(BA4RKW)"},{"title":"支持作者","date":"2019-09-21T15:21:36.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"donate.html","permalink":"https://blog.kuri.ink/donate.html","excerpt":"","text":"☕ 支持作者 📑 鸣谢名单 时间 捐赠者 金额 渠道 备注 YYYY-MM-DD 阿卡西 ￥2.33 Wechat Pay"},{"title":"友情链接","date":"2019-09-21T15:21:45.000Z","updated":"2025-08-09T06:23:00.723Z","comments":true,"path":"links.html","permalink":"https://blog.kuri.ink/links.html","excerpt":"","text":"山中何事？松花酿酒，春水煎茶。 📖 『书摘。』 const chizaobook = new Chizaobook({container: \"chizaobook\", packageSource:\"https://cdn.jsdelivr.net/gh/ChizaoProject/Packages@latest/package_source.json\", packageType: 8}); 🤝 友情链接 📔 个人博客 💻 官方网站 🔍 项目/工具 1[![fly6022](https://imageurl.kuri.ink/images/logo.png)](https://blog.kuri.ink/ &quot;fly6022&quot;)"}],"posts":[{"title":"AI：RX590通过Ollama本地部署Deepseek-R1大模型","slug":"AI：AMD RX590显卡通过Ollama本地部署Deepseek R1大模型","date":"2025-02-05T02:24:00.000Z","updated":"2025-07-15T13:31:35.759Z","comments":true,"path":"posts/AI：AMD RX590显卡通过Ollama本地部署Deepseek R1大模型/","permalink":"https://blog.kuri.ink/posts/AI%EF%BC%9AAMD%20RX590%E6%98%BE%E5%8D%A1%E9%80%9A%E8%BF%87Ollama%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2Deepseek%20R1%E5%A4%A7%E6%A8%A1%E5%9E%8B/","excerpt":"Ollama 并不原生支持部分系列的 AMD 显卡，因此，想要通过 RX590 显卡运行大模型（LLM），需要手动进行修改配置。","text":"Ollama 并不原生支持部分系列的 AMD 显卡，因此，想要通过 RX590 显卡运行大模型（LLM），需要手动进行修改配置。 下载安装Ollama-for-AMD 首先下载Ollama-for-AMD：https://github.com/likelovewant/ollama-for-amd/releases/tag/v0.5.4。 正常安装，Ollama会自动在后台运行，在任务栏中右键Ollama图标，点击“View logs”。 此时会跳转到目录：C:\\Users\\&lt;用户名&gt;\\AppData\\Local\\Ollama 用文本编辑器打开“server.log”或“server-1.log”。 日志提示WARN：显卡gpu type为gfx803，且ROCm版本为5.7。 我们需要下载对应gfx version及ROCm的文件。 配置ROCm（HIP SDK） 首先下载ROCm的相关驱动，HIP SDK：https://www.amd.com/en/developer/resources/ROCm-hub/hip-sdk.html 找到对应操作系统版本Windows 10 &amp; 11，ROCm版本5.7.x的SDK，下载并安装。 配置Rocmlibs 显卡gpu type为gfx803，对应为rocm.gfx803.optic.vega10.logic.hip.sdk.6.1.2.7z。 下载完毕后解压。 打开目录：C:\\Users\\&lt;用户名&gt;\\AppData\\Local\\Programs\\Ollama\\rocm 将解压后文件中的hipblas.dll替换本目录中的文件。 打开目录：C:\\Users\\&lt;用户名&gt;\\AppData\\Local\\Programs\\Ollama\\rocm\\rocblas 将解压后文件中的library文件夹替换本目录中的文件夹。 重启电脑。 安装Deepseek 打开Ollama官网模型目录：https://ollama.com/library/deepseek-r1 根据自身电脑配置选择对应参数（x b代表10x 亿参数，例如14b代表140亿参数） 例如，我们要安装14b的大模型。 在CMD中键入ollama run deepseek-r1:14b 等待安装完毕即可。 或者，你也可以采用图形化界面与AI交互，例如使用Chatbox。 检查 尝试与AI进行对话，例如输入“你好。” 打开任务管理器，发现GPU在工作，证明配置成功。","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"AI","slug":"AI","permalink":"https://blog.kuri.ink/tags/AI/"},{"name":"Deepseek","slug":"Deepseek","permalink":"https://blog.kuri.ink/tags/Deepseek/"},{"name":"Ollama","slug":"Ollama","permalink":"https://blog.kuri.ink/tags/Ollama/"},{"name":"AMD","slug":"AMD","permalink":"https://blog.kuri.ink/tags/AMD/"},{"name":"RX590","slug":"RX590","permalink":"https://blog.kuri.ink/tags/RX590/"},{"name":"ROCm","slug":"ROCm","permalink":"https://blog.kuri.ink/tags/ROCm/"}]},{"title":"HAM：业余无线电入门从考试到设台指南","slug":"HAM：业余无线电入门从考试到设台指南(一)","date":"2025-01-04T08:25:25.000Z","updated":"2025-08-09T06:25:50.678Z","comments":true,"path":"posts/HAM：业余无线电入门从考试到设台指南(一)/","permalink":"https://blog.kuri.ink/posts/HAM%EF%BC%9A%E4%B8%9A%E4%BD%99%E6%97%A0%E7%BA%BF%E7%94%B5%E5%85%A5%E9%97%A8%E4%BB%8E%E8%80%83%E8%AF%95%E5%88%B0%E8%AE%BE%E5%8F%B0%E6%8C%87%E5%8D%97(%E4%B8%80)/","excerpt":"本文分别从业余无线电发展史及意义、考试须知、设台须知、法律法规、相关术语等方面进行介绍，既是一篇HAM新人的记录，也是对准备入坑HAM的指南。 DE BA4RKW VY 73!~✨","text":"本文分别从业余无线电发展史及意义、考试须知、设台须知、法律法规、相关术语等方面进行介绍，既是一篇HAM新人的记录，也是对准备入坑HAM的指南。 DE BA4RKW VY 73!~✨ 业余无线电做什么？ 业余无线电（Amateur Radio），是一种供业余无线电爱好者进行相互通信、无线通讯技术实验、自我训练、个人娱乐、无线电运动、竞赛以及应急通信的一项使用无线电频率频谱的无线电业务。其中 “业余无线电爱好者” 指 “经正式批准的、对无线电技术有兴趣的人，其兴趣纯系个人爱好而不涉及谋取利润”。 早在1925年，国际业余无线电联盟（International Amateur Radio Union / IARU）在美国康涅狄格州的纽英顿成立，100年来，业余无线电技术与时俱进，不断地为人类社会进步发展贡献力量。 上世纪30年代，无线电技术已经传入我国，这一新兴的传播媒体和技术吸引了众多无线电爱好者的参与和欢迎。1931年，“九·一八”事变爆发，日本全面侵华战争开始，中国打响了东方反法西斯的第一枪，自1932年10月起，我国的业余无线电爱好者志愿组建中国业余无线电社（CAC），1937年10月，由朱其清先生牵头，在南京市正式组建业余无线电人员战时服务团（CARL），无线电爱好者们尽自己的力量，运用无线电技术，积极与国外反法西斯力量通联，同时侦查、干扰日军电台，为抗日战争的胜利起到了推动作用。 1940年5月5日，第一届全国空中年会在重庆市召开，我国的“业余无线电节”确立为每年的5月5日，农历五月初五是中华民族的传统节日“端午节”，这一天用来纪念爱国诗人屈原，另外，当人们相遇时，通常会握手致意，双手五指相扣，即为“5+5”，具有友好的含义。同时，在业余无线电通联结束时，通常会向对方报告“73”，表示对“对方美好的祝愿”。“5+5=7+3”，因此，选择5月5日作为业余无线电节，既反映了业余无线电“友好、互助”的精神，也蕴含着“爱国、进步”的精神。 2008年5月12日下午，里氏8.0级的汶川大地震发生，强震的破坏导致常规通信一度中断，地震发生后，四川成都、绵阳的无线电爱好者迅速动员，形成适应于应急救灾的组织体系和指挥系统，前往重灾区支援应急通信近百次，调动车辆数万台次，为救灾活动提供了顽强的通信保障。 成为一名HAM需要具备的资质 操作资质 中国无线电协会业余电台操作证书 设台资质 无线电台设备（手持/车载/固定） 中华人民共和国无线电台执照 如何准备考证 在成为一名合法的HAM之前，你需要通过由各地无线电管理局或监测站承办的业余无线电操作能力验证考试。与考驾照类似，初次接触业余无线电需要从A类考起（由初级到高级依次为：A -&gt; B -&gt; C）。考试题目均为客观题。在工信部新规[1]推行之前，考试举办时间和次数各地不同，需要关注所在地的工信局网站/微信公众号。以南京市为例，2024年共举办2次考试。 根据工业和信息化部第67号令要求，2025年10月1日以后，业余无线电操作能力验证考核方法如下： A类共40题，其中单选题32题，多选题8题，答题时间40分钟，答对30题为合格。 B类共60题，其中单选题45题，多选题20题，答题时间60分钟，答对45题为合格。 C类共90题，其中单选题70题，多选题20题，答题时间90分钟，答对70题为合格。 注：作答多选题时，必须与标准答案完全一致，多选、少选或错选均不得分。 考试题库 注意 请注意题库更新时间，下载并学习最新版本的题库，本条目内容仅供参考。 注：2025年下半年考试极有可能启用新题库以及新考试规则，请留意。 注意 2025年7月28日消息：CRAC已经更新业余无线电操作能力验证题库以及考核方法，即将于2025年10月1日起正式使用，可前往官方网站进行下载。 业余无线电操作能力验证考试 各个等级题库均可以在 CRAC官网 中下载。 业余电台操作证书考试题库(v20211022)-旧版 考试报名 考试一般在开考前2个星期由你所在地的工信局在微信公众号和官方网站上通知，在开考1个星期前组织考试报名。考试报名渠道一般有两个，均在线上：一个是智谱APP，另一个是CRAC官网的业余无线电台操作技术能力验证及信息管理系统。 需要注意的是，一些热门城市，例如南京、上海等地，考试报名人数较多，同时可能会有一些附加报名条件，因此需要提前准备资料，以免在报名时耽误时间。 报名材料 以下是A类考试需要准备的报名材料： 本人电子证件照。 请提供6个月以内的彩色照片，jpg格式，正面，免冠，包含完整的头部，头部高度应在照片高度的1/2至4/5范围内，脸部必须清晰，照片高宽比为4:3左右，图像分辨率不低于400×300像素、不高于4500×3375像素。不得使用自拍照、生活照、艺术照。照片不得有白色外边框。 个人身份证正反面电子照片。 请提供彩色身份证件头像面和国徽面照片，无遮挡、扭曲、变形、反光，文字、头像清晰可辨，jpg格式，分辨率不低于1024×768像素、不高于4096×3072像素。 参加考试 报名成功后，需要在规定时间到考试地点参加考试，报名成功但不参加考试的，可能影响个人信用，导致限考或禁考。 答题完毕后，点击提交按钮，当场查看并确认成绩，成绩≥25分即为考试通过。 考试合格等待领取操作证书 操作证书制证时间一般在14天左右，制证完毕后通过邮寄方式寄送到报名时填写的地点。 准备设台 购买无线电台 下面这款电台是我正在使用的： 手持电台-泉盛UV-K6（￥169） 准备设台资料 无线电台设备铭牌照片（出厂时） 无线电台申请表 在设台地的居住证明（含学生证、身份证、户口本、居住证明等） 无线电常用术语 字母解释法 字母解释法，又称码语。其在航空、航海以及业余无线电通信中被广泛使用，优点是降低通信过程中产生歧义的可能性。 字母 解释法 电码 字母 解释法 电码 A Alpha .- B Bravo -… C Charlie -.-. D Delta -.. E Echo . F Foxtrot ..-. G Golf --. H Hotel …. I India .. J Juliet .--- K Kilo -.- L Lima .-.. M Mike -- N November -. O Oscar --- P Papa .--. Q Quebec --.- R Romeo .-. S Sierra … T Tango - U Uniform .-- V Victor …- W Whisky .-- X X-ray -..- Y Yankee -.-- Z Zulu --.. 1 One .---- 2 Two ..--- 3 Three …-- 4 Four ….- 5 Five ….. 6 Six -…. 7 Seven --… 8 Eight ---.. 9 Nine ----. 0 Zero ----- Q简语 Q简语是一种标准化的三字母通信简略语，因短语开头字母均为“Q”而得名，用于简化业余无线电通信中传递常用的含义。 简语 问 句 答句或报告 QRA 你台的名称是什么？ 我台的名称是......。 QRH 我的频率稳定吗？ 你的频率不稳定。 QRL 你忙吗？ 我很忙，请不要打扰。 QRP 要降低发信机功率吗? 请减低发信机功率。 QRS 要我发得慢一些吗? 请发得慢一些(每分钟X字). QRT 要我停止拍发吗？ 请停止拍发 QRU 你有什么发给我吗？ 我没有什么发给你。 QRM 你受到他台干扰吗？ 我受到X干扰(1.无 2.稍有 3.中等 4.严重 5.极端) QRN 你受到天电干扰吗？ 我受到X天电干扰(1.无 2.稍有 3.中等 4.严重 5.极端) QRV 你准备好了吗？ 我准备好了。 QTH 你的地理位置在...? 我的地理位置在... QSB 我的信号有衰落吗？ 你的信号有衰落。 QSL 你能确认联络吗？ 我现在确认联络。 QSO 你能与XX直接或接转通信吗? 我能和XX直接或经接转通信. QRZ 谁在叫我？ XX正在(用..频率)呼叫你。 QRX 你什么时候在呼叫我？ 我将在X点种(用..频率)再呼叫您。 QSA 我的信号强度怎样？ 你的信号强度是:1.几乎收不到 2.弱 3.还好4.好5.很好. QSY 要我改用别的频率拍发吗？ 请改用别的频率(用..频率)拍发。 尝试通联 进阶玩法 关于进阶的内容，本文章仅简要介绍，后期会推送具体介绍文章。 制作和交换QSL卡片 尝试与卫星通联 到QRZ.com注册一个账号吧 APRS APRS，即自动位置回报系统（Automatic Packet Report System，简称APRS） 为业余无线电中的一个项目，结合业余无线电和全球卫星定位系统（GPS）以AFSK AX.25通讯模式达到即时位置传送的目的，可以实现短报文传输以及实时地理坐标的共享。 社会责任 “体谅、忠诚、进取、友爱、适度、爱国”是国际业余无线电精神，1928年由Paul M.Segal, W9EEA提出。其含义为： 体谅（Considerate）——绝对不故意在联络中妨碍他人的乐趣。 忠诚（Loyal）——对同好、俱乐部以及在国内外代表全国业余无线电爱好者的国家协会表示忠诚、鼓励与支持。 进取（Progressive）——掌握先进科学的知识，装备认真有效的电台，以及无可挑剔的操作。 友爱（Friendly）——应要求缓慢耐心的发送，对新手的友好指导和建议，善意的帮助合作，以及考虑别人的利益，这些是业余精神的证明。 适度（Balanced）——业余无线电是一种爱好，绝不因之妨碍对家庭、工作、学校、和社会所应尽的义务。 爱国（Patriotic）——电台和技术时刻准备服务于国家和社会。 以上是每一位HAM都需要时刻遵守的精神。 推荐阅读 《业余无线电通信》第六版（购买链接；童效勇（呼号 BA1AA）、陈方（呼号BA4RC）主持编写；人民邮电出版社出版） 小说《我们生活在南京》（2021年第32届银河科幻奖获奖作品） 参考文献 中国业余无线电“五·五”节的由来：https://www.chinaham.cn/MMDVM/4.html DE BA4RKW VY 73!2025/1/4 写于 江苏南京2025/4/12 完稿于 江苏南京2025/7/27 修改于 河北唐山 工业和信息化部优化业余无线电管理 更好服务业余无线电爱好者：https://www.miit.gov.cn/zwgk/zcjd/art/2024/art_8413e1f3c63944eab2d8509af4f2d290.html ↩︎","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"HAM","slug":"HAM","permalink":"https://blog.kuri.ink/tags/HAM/"},{"name":"业余无线电","slug":"业余无线电","permalink":"https://blog.kuri.ink/tags/%E4%B8%9A%E4%BD%99%E6%97%A0%E7%BA%BF%E7%94%B5/"},{"name":"UV-K6","slug":"UV-K6","permalink":"https://blog.kuri.ink/tags/UV-K6/"}]},{"title":"一加7：记一次救砖过程","slug":"一加7：记一次救砖过程","date":"2024-08-29T10:04:40.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/一加7：记一次救砖过程/","permalink":"https://blog.kuri.ink/posts/%E4%B8%80%E5%8A%A07%EF%BC%9A%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%95%91%E7%A0%96%E8%BF%87%E7%A8%8B/","excerpt":"记一次手机救砖过程。","text":"记一次手机救砖过程。 一个平静的午后，当我给手机重启时，却迟迟等不到手机开机时的振动，屏幕也一直没有被点亮。 会不会是电池的问题？我将手机连接到充电器，接通电源后依然不开机。 会不会是主板的问题？考虑到重启时手机温度不高，芯片脱焊的概率不大。于是我考虑将手机连接到电脑…… 连接到电脑，打开 AutumnBox。 提示“未连接设备”，同时也无法进入到Fastboot模式。 看到这个画面，我慌了，一时间不知所措。问题究竟出现在哪里？ 我再一次尝试。 同时按住“音量+”和“音量-”键，将手机连接到电脑，打开“计算机管理”，找到“设备管理器”，展开“端口（COM和LPT）”。 注意到手机进入了 900E 模式（不是9008模式），原因也在此浮现出来：手机在执行重启的过程中未完全关机，从而造成“假死”的现象。 按住“音量+”键和电源键，使手机强制重启，终于听到了开机的振动声，屏幕也被点亮，稍后手机完成启动，进入了系统。 真是“山重水复疑无路，柳暗花明又一村”！","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"一加7","slug":"一加7","permalink":"https://blog.kuri.ink/tags/%E4%B8%80%E5%8A%A07/"},{"name":"刷机","slug":"刷机","permalink":"https://blog.kuri.ink/tags/%E5%88%B7%E6%9C%BA/"},{"name":"救砖","slug":"救砖","permalink":"https://blog.kuri.ink/tags/%E6%95%91%E7%A0%96/"}]},{"title":"树莓派：配置config.txt实现超频及启用HDMI功能","slug":"树莓派：配置config.txt实现超频及启用HDMI功能","date":"2024-08-10T12:00:59.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/树莓派：配置config.txt实现超频及启用HDMI功能/","permalink":"https://blog.kuri.ink/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%9A%E9%85%8D%E7%BD%AEconfig.txt%E5%AE%9E%E7%8E%B0%E8%B6%85%E9%A2%91%E5%8F%8A%E5%90%AF%E7%94%A8HDMI%E5%8A%9F%E8%83%BD/","excerpt":"本文章以树莓派为例，通过配置 config.txt文件实现对树莓派CPU/GPU的超频并启用HDMI功能。","text":"本文章以树莓派为例，通过配置 config.txt文件实现对树莓派CPU/GPU的超频并启用HDMI功能。 环境 设备：Raspberry Pi 4B（4GB RAM） 系统：Ubuntu 22.04 LTS（arm64） 你还需要 Micro SD Card 读卡器 超频 注意 在配置config.txt之前，请对原文件进行备份，以免造成树莓派无法启动的后果。 超频会造成树莓派运行稳定性下降，请根据实际情况合理超频。 将force_turbo选项赋值为 1会使CPU强制在最大频率工作，可能会造成严重发热问题，同时会失去保修。 将存储卡连接到电脑上，打开 system-boot文件夹，找到 config.txt文件。 在文件末尾新增一行，添加以下内容： 123456[pi4]arm_boost=1over_voltage=6arm_freq=2000gpu_freq=750force_turbo=0 以下内容摘自 树莓派文档 ： 选项 描述 arm_freq ARM CPU 频率（MHz）。 arm_boost 将 arm_freq提升至板卡类型和固件支持的最高频率。设置为 1时启用。 gpu_freq 同时设置 core_freq、h264_freq、isp_freq、v3d_freq和 hevc_freq。 core_freq GPU 处理器内核的频率（MHz）。影响 CPU 性能，因为它驱动二级缓存和内存总线；二级缓存仅对树莓派 Zero/树莓派 Zero W/树莓派 1 有利；SDRAM 对树莓派2和树莓派3有微小的好处。有关在树莓派4上的使用，请参阅下面的章节。 h264_freq 硬件视频模块的频率（MHz）；可单独覆盖 gpu_freq设置。 isp_freq 图像传感器流水线模块的频率（MHz）；可单独覆盖 gpu_freq设置。 v3d_freq 3D 模块的频率（MHz）；可单独覆盖 gpu_freq设置。在树莓派5上，V3D 独立于 core_freq、isp_freq和 hevc_freq。 hevc_freq 高效视频编解码器块的频率（MHz）；可单独覆盖 gpu_freq 设置。仅适用于树莓派4。 sdram_freq SDRAM 频率（MHz）。不支持 树莓派 4 或更新版本的 SDRAM 超频。 over_voltage CPU/GPU内核电压上限。该值范围应为 [-16,8]，相当于 [0.95V,1.55V]（树莓派1 上为 [0.8,1.4V]），步长为 0.025V。换句话说，指定 -16 时，CPU/GPU 内核电压最大值为 0.95V（树莓派 1 为 0.8V）；指定 8 时，CPU/GPU 内核电压最大值为 1.55V（树莓派 1 为 1.4V）。有关默认值，请参见下表。只有指定 force_turbo=1时，才允许电压值超过 6：如果同时设置 over_voltage_*&gt;0，则会设置保修位。 over_voltage_sdram 同时设置 over_voltage_sdram_c、over_voltage_sdram_i和 over_voltage_sdram_p。 over_voltage_sdram_c SDRAM 控制器电压调整。[-16,8]相当于 [0.8V,1.4V]，步长为 0.025V。不支持树莓派4或更高版本设备。 over_voltage_sdram_i SDRAM I/O 电压调整。[-16,8] 相当于 [0.8V,1.4V]，步长为 0.025V。不支持树莓派4或更高版本设备。 over_voltage_sdram_p SDRAM phy 电压调整。[-16,8] 相当于 [0.8V,1.4V]，步长为 0.025V。不支持树莓派4或更高版本设备。 force_turbo 即使 ARM 内核不忙时也强制执行超频模式频率。如果同时设置了 over_voltage_*，则启用此功能可能会设置保修位。 initial_turbo 在给定值（秒）或 cpufreq 设置频率之前，从启动开始启用超频模式。最大值为 60。 arm_freq_min 用于动态频率时钟的 arm_freq最小值。请注意，将该值降至默认值以下并不会显著降低功耗，目前也不支持该功能。 core_freq_min 用于动态频率时钟的 core_freq最小值。 gpu_freq_min 用于动态频率时钟的 gpu_freq最小值。 h264_freq_min 用于动态频率时钟的 h264_freq最小值。 isp_freq_min 用于动态频率时钟的 isp_freq最小值。 v3d_freq_min 用于动态频率时钟的 v3d_freq最小值。 hevc_freq_min 用于动态频率时钟的 hevc_freq最小值。 sdram_freq_min 用于动态频率时钟的 sdram_freq最小值。 over_voltage_min 用于动态频率时钟的 over_voltage。该值范围应为 [-16,8]，相当于 [0.8V,1.4V]，步长为 0.025V。换句话说，指定 -16 时，CPU/GPU 内核空闲电压为 0.8V，指定 8 时，最低电压为 1.4V。此设置在树莓派4和树莓派5上已被弃用。 over_voltage_delta 在 树莓派4和树莓派5上，over_voltage_delta 参数会在 DVFS 算法计算出的数值上添加以微伏为单位的偏移量。 temp_limit 过热保护。当 SoC 达到该值（摄氏度）时，该参数会将时钟和电压设置为默认值。超过 85 的值将被箝位在 85。 temp_soft_limit 仅限 3A+/3B+ 。CPU 速度节流控制。该值用于设置 CPU 时钟速度节流系统启动时的温度。在此温度下，时钟速度将从1400MHz降至1200MHz。默认值为 60，最大可升至 70，但可能导致不稳定。 HDMI配置 新增一行，添加下列内容（其中 hdmi_group和 hdmi_mode的值视具体情况而定）： 12345hdmi_group=1hdmi_mode=16hdmi_enable_4kp60=1hdmi_force_hotplug=1config_hdmi_boost=4 将下列内容注释掉： 1# dtoverlay=vc4-kms-v3d,cma-128 hdmi_group和 hdmi_mode的赋值详见 自定义树莓派的显示分辨率 - 树莓派实验室 原版 config.txt 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364[all]kernel=vmlinuzcmdline=cmdline.txtinitramfs initrd.img followkernel[pi4]max_framebuffers=2arm_boost=1[all]# Enable the audio output, I2C and SPI interfaces on the GPIO header. As these# parameters related to the base device-tree they must appear *before* any# other dtoverlay= specificationdtparam=audio=ondtparam=i2c_arm=ondtparam=spi=on# Comment out the following line if the edges of the desktop appear outside# the edges of your displaydisable_overscan=1# If you have issues with audio, you may try uncommenting the following line# which forces the HDMI output into HDMI mode instead of DVI (which doesn&#x27;t# support audio output)#hdmi_drive=2# Enable the serial pinsenable_uart=1# Autoload overlays for any recognized cameras or displays that are attached# to the CSI/DSI ports. Please note this is for libcamera support, *not* for# the legacy camera stackcamera_auto_detect=1display_auto_detect=1# Config settings specific to arm64arm_64bit=1dtoverlay=dwc2# Enable the KMS (&quot;full&quot; KMS) graphics overlay, leaving GPU memory as the# default (the kernel is in control of graphics memory with full KMS)dtoverlay=vc4-kms-v3ddisable_fw_kms_setup=1[pi3+]# Use a smaller contiguous memory area, specifically on the 3A+ to avoid an# OOM oops on boot. The 3B+ is also affected by this section, but it shouldn&#x27;t# cause any issues on that boarddtoverlay=vc4-kms-v3d,cma-128[pi02]# The Zero 2W is another 512MB board which is occasionally affected by the same# OOM oops on boot.dtoverlay=vc4-kms-v3d,cma-128[all][cm4]# Enable the USB2 outputs on the IO board (assuming your CM4 is plugged into# such a board)dtoverlay=dwc2,dr_mode=host[all]","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"https://blog.kuri.ink/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"配置文件","slug":"配置文件","permalink":"https://blog.kuri.ink/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"},{"name":"HDMI","slug":"HDMI","permalink":"https://blog.kuri.ink/tags/HDMI/"},{"name":"超频","slug":"超频","permalink":"https://blog.kuri.ink/tags/%E8%B6%85%E9%A2%91/"}]},{"title":"树莓派：基于docker利用ddns-go配置DDNS实现公网域名访问","slug":"树莓派：基于docker利用ddns-go配置DDNS实现公网域名访问","date":"2024-07-17T06:17:40.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/树莓派：基于docker利用ddns-go配置DDNS实现公网域名访问/","permalink":"https://blog.kuri.ink/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%9A%E5%9F%BA%E4%BA%8Edocker%E5%88%A9%E7%94%A8ddns-go%E9%85%8D%E7%BD%AEDDNS%E5%AE%9E%E7%8E%B0%E5%85%AC%E7%BD%91%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE/","excerpt":"本文章以树莓派为例，基于Docker，利用ddns-go实现IPv6网络公网域名访问。","text":"本文章以树莓派为例，基于Docker，利用ddns-go实现IPv6网络公网域名访问。 环境 设备：Raspberry Pi 4B（4GB RAM） 系统：Ubuntu 22.04 LTS（arm64） 你还需要 个人域名 安装Docker 打开命令行，键入: 1234sudo susudo apt updatesudo apt upgradesudo apt install docker-ce 设置docker开启自启动： 1systemctl enable docker.service 配置Docker 为了使ddns-go安装过程顺利，故需要提前更换Docker的安装源： 1sudo nano /etc/docker/daemon.json 将Docker的安装源更换为下面内容： 12345678910&#123; &quot;registry-mirrors&quot;: [ &quot;https://do.nark.eu.org&quot;, &quot;https://dc.j8.work&quot;, &quot;https://docker.m.daocloud.io&quot;, &quot;https://dockerproxy.com&quot;, &quot;https://docker.mirrors.ustc.edu.cn&quot;, &quot;https://docker.nju.edu.cn&quot; ]&#125; 输入下方命令重启服务： 12systemctl daemon-reloadsystemctl restart docker 键入下方命令检查是否更换成功： 1docker info ERROR若终端报错，可重启终端重试。 若返回内容中包括以下内容，则证明更换成功。 1234567Registry Mirrors: https://do.nark.eu.org/ https://dc.j8.work/ https://docker.m.daocloud.io/ https://dockerproxy.com/ https://docker.mirrors.ustc.edu.cn/ https://docker.nju.edu.cn/ 安装及配置ddns-go 在任意路径下新建文件夹： 1mkdir ddns-go 在文件夹内创建 docker-compose.yml文件。 123cd ddns-gotouch docker-compose.ymlnano docker-compose.yml 1234567services: ddns-go: image: jeessy/ddns-go restart: always network_mode: &quot;host&quot; volumes: - ./ddns-go_data:/root 运行以下命令，安装ddns-go： 1sudo docker compose up -d 安装成功后，在浏览器地址栏输入：http://[树莓派ip地址]:9876进入后台配置。 WARNINGddns-go初始配置需要在5分钟之内完成，否则配置不能保存。 配置时，需要DNS平台的token，这里以Cloudflare为例进行配置。 在浏览器地址栏键入 https://dash.cloudflare.com/profile/api-tokens. 点击&quot;创建令牌&quot;→“编辑区域DNS（使用模板）” 配置后点击&quot;继续以显示摘要&quot;→创建令牌。 将生成的令牌粘贴到ddns-go后台中。 在IPv6的“Domains”一栏中添加好自己的域名，保存即可。 等待5分钟左右，即可通过域名从公网访问内容。","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"https://blog.kuri.ink/tags/IPv6/"},{"name":"docker","slug":"docker","permalink":"https://blog.kuri.ink/tags/docker/"},{"name":"DDNS","slug":"DDNS","permalink":"https://blog.kuri.ink/tags/DDNS/"},{"name":"树莓派","slug":"树莓派","permalink":"https://blog.kuri.ink/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"ddns-go","slug":"ddns-go","permalink":"https://blog.kuri.ink/tags/ddns-go/"},{"name":"内网穿透","slug":"内网穿透","permalink":"https://blog.kuri.ink/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://blog.kuri.ink/tags/Cloudflare/"}]},{"title":"IPv6：电信光猫IPv6网络配置","slug":"IPv6：电信光猫IPv6网络配置","date":"2024-07-16T12:19:00.000Z","updated":"2025-07-15T13:31:35.743Z","comments":true,"path":"posts/IPv6：电信光猫IPv6网络配置/","permalink":"https://blog.kuri.ink/posts/IPv6%EF%BC%9A%E7%94%B5%E4%BF%A1%E5%85%89%E7%8C%ABIPv6%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/","excerpt":"本文章以 天翼网关 4.0（设备型号：ZXHN F610GV9）为例，实际演示电信光猫IPv6网络的配置。","text":"本文章以 天翼网关 4.0（设备型号：ZXHN F610GV9）为例，实际演示电信光猫IPv6网络的配置。 配置方法 打开浏览器，在地址栏键入光猫的局域网IP地址（我的是 192.168.1.1），进入光猫后台。 输入管理员用户名及密码，用户名：telecomadmin，密码：nE7jA%5m。 点击导航栏中的“网络”→“网络设置”，选择连接名称及IP模式。 将“IPv6”信息修改为下图所示并保存： 地址获取方式：AutoConfigured 获取前缀：是前缀获取方式：PrefixDelegration DNS获取方式：DHCPv6 回退到“用户侧管理”，点击“IPv6设置”，将本页设置修改为下图所示并保存。 打开路由器后台，在IPv6相关设置下更改为“桥模式”。 重启光猫及路由器。 打开网页IPW.cn，检查IPv6连接情况。 若为下图所示，证明配置成功 IPv6有什么好处 免去内网穿透的烦恼 每一个IPv6地址都是一个公网IP地址。这使得游戏联机、远程连接等更加便捷。 实现真正意义上的P2P 每一个IPv6地址对应一个设备，为点对点传输创造了条件。 取之不尽用之不竭 IPv6的地址池足够巨大，甚至可以为地球上每一粒沙子都分配一个IPv6地址。","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"IPv6","slug":"IPv6","permalink":"https://blog.kuri.ink/tags/IPv6/"},{"name":"中国电信","slug":"中国电信","permalink":"https://blog.kuri.ink/tags/%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1/"},{"name":"网络","slug":"网络","permalink":"https://blog.kuri.ink/tags/%E7%BD%91%E7%BB%9C/"}]},{"title":"Spyder：[WinError 126] 找不到指定的模块 错误的解决","slug":"Spyder：[WinError 126] 找不到指定的模块 错误的解决","date":"2023-08-20T13:56:53.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/Spyder：[WinError 126] 找不到指定的模块 错误的解决/","permalink":"https://blog.kuri.ink/posts/Spyder%EF%BC%9A[WinError%20126]%20%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E6%A8%A1%E5%9D%97%20%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3/","excerpt":"Spyder [WinError 126] 找不到指定的模块 错误的解决.","text":"Spyder [WinError 126] 找不到指定的模块 错误的解决. 问题分析 考虑为Python解释器路径有误，导致Spyder无法正确连接到Ipython内核。 解决办法 寻找系统Python解释器路径 在CMD中键入： 1where python 返回值即为 Python 解释器路径，将该路径复制到剪切板。 配置自定义解释器 Spyder中依次找到：工具 --&gt; 偏好 --&gt; Python 解释器 --&gt; 使用下列 Python 解释器 将 Python 解释器路径 粘贴过来。 重启 Spyder 安装依赖 CMD中输入： 1pip install spyder-kernels==2.0.* 重启 Spyder，即可解决问题。","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Spyder","slug":"Spyder","permalink":"https://blog.kuri.ink/tags/Spyder/"},{"name":"Python","slug":"Python","permalink":"https://blog.kuri.ink/tags/Python/"}]},{"title":"记录一次 基于 Fiddler 工具的 Web 逆向分析","slug":"记录一次 基于 Fiddler 工具的 Web 逆向分析","date":"2023-07-31T15:06:59.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/记录一次 基于 Fiddler 工具的 Web 逆向分析/","permalink":"https://blog.kuri.ink/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%20%E5%9F%BA%E4%BA%8E%20Fiddler%20%E5%B7%A5%E5%85%B7%E7%9A%84%20Web%20%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/","excerpt":"本文章以 百度题库: https://easylearn.baidu.com/edu-page/tiangong/questiondetail 为例，采用 Fiddler 工具及 Python 语言实现 Web 逆向分析。","text":"本文章以 百度题库: https://easylearn.baidu.com/edu-page/tiangong/questiondetail 为例，采用 Fiddler 工具及 Python 语言实现 Web 逆向分析。 法律风险告知 本文仅用于编程及相关技术的学习交流及经验分享，请勿利用相关技术手段从事商业侵权以及其它违法犯罪活动！ 网页客户端操作逻辑 该网站是学习类网站，主要功能是提供作业习题内容及相关解析，客户端的操作逻辑是：用户将题目输入到搜索框，之后点击“搜索试题”按钮，网页便重定向到对应的页面。与搜索引擎的操作逻辑类似。 注意到，当按下“搜索试题”按钮后，URL后面多了键名为 query，键值为 黄河小浪底水利枢纽是治理开发黄河的关键性工程。阅读材料回答问题。(14分) 材料(编码后为：%E9%BB%84%E6%B2%B3%E5%B0%8F%E6%B5%AA%E5%BA%95%E6%B0%B4%E5%88%A9%E6%9E%A2%E7%BA%BD%E6%98%AF%E6%B2%BB%E7%90%86%E5%BC%80%E5%8F%91%E9%BB%84%E6%B2%B3%E7%9A%84%E5%85%B3%E9%94%AE%E6%80%A7%E5%B7%A5%E7%A8%8B%E3%80%82%E9%98%85%E8%AF%BB%E6%9D%90%E6%96%99%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E3%80%82%2814%E5%88%86%29%20%E6%9D%90%E6%96%99)的内容。 点击任意一条信息，我们跳转到了一个新页面，这个页面有一些像 作业帮 的搜题界面。 此页面展示了习题的题目内容及解答步骤。 同时，URL也发生了变化，此处的URL为 https://easylearn.baidu.com/edu-page/tiangong/questiondetail?id=1714572139188923485&amp;from=jySearch。 注意到此处出现了一个新参数 id，它的值为 1714572139188923485 实现原理及逆向工程 为了弄清以上操作的实际原理，我们使用 Fiddler 工具，对刚才的全部过程进行记录，并且抓取部分请求片段进行分析。 在刚才的请求操作中，以下请求片段引起了我们的注意： 1GET https://easylearn.baidu.com/edu-web/content/search?query=%E9%BB%84%E6%B2%B3%E5%B0%8F%E6%B5%AA%E5%BA%95%E6%B0%B4%E5%88%A9%E6%9E%A2%E7%BA%BD%E6%98%AF%E6%B2%BB%E7%90%86%E5%BC%80%E5%8F%91%E9%BB%84%E6%B2%B3%E7%9A%84%E5%85%B3%E9%94%AE%E6%80%A7%E5%B7%A5%E7%A8%8B%E3%80%82%E9%98%85%E8%AF%BB%E6%9D%90%E6%96%99%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E3%80%82(14%E5%88%86)+%E6%9D%90%E6%96%99&amp;type=&amp;page=1&amp;pageSize=10&amp;clientType=pc HTTP/1.1 它将 query的值由客户端发送到了服务端。 服务端返回的数据是一段 JSON文本（实际内容较长，此处保留了一部分）： 12345678910111213141516171819202122232425262728293031323334353637&#123; &quot;errno&quot;: 0, &quot;errmsg&quot;: &quot;success&quot;, &quot;data&quot;: &#123; &quot;count&quot;: 50, &quot;list&quot;: [ &#123; &quot;entityId&quot;: &quot;1714572139188923485&quot;, &quot;title&quot;: &quot;&lt;div&gt;&lt;span class=\\&quot;high-light\\&quot;&gt;黄河小浪底水利枢纽是治理开发黄河&lt;/span&gt;的&lt;span class=\\&quot;high-light\\&quot;&gt;关键性工程&lt;/span&gt;。&lt;span class=\\&quot;high-light\\&quot;&gt;阅读材料回答问题&lt;/span&gt;。 &lt;span class=\\&quot;high-light\\&quot;&gt;材料&lt;/span&gt;一 图a为&lt;span class=\\&quot;high-light\\&quot;&gt;黄河&lt;/span&gt;水系图,图b为&lt;span class=\\&quot;high-light\\&quot;&gt;黄河&lt;/span&gt;流量与含沙量统计图...&lt;/div&gt;&quot;, &quot;hotLevel&quot;: 100.3, &quot;difficulty&quot;: 4, &quot;sourceType&quot;: &quot;question&quot;, &quot;subject&quot;: &quot;其他&quot;, &quot;step&quot;: &quot;其他&quot;, &quot;knowPoint&quot;: &quot;&quot;, &quot;hasVideo&quot;: false, &quot;hasDocument&quot;: true, &quot;viewNum&quot;: &quot;9.1w&quot;, &quot;docPriority&quot;: 4 &#125;, &#123; &quot;entityId&quot;: &quot;1735129348683347666&quot;, &quot;title&quot;: &quot;&lt;div&gt;&lt;span class=\\&quot;high-light\\&quot;&gt;黄河小浪底水利枢纽是治理开发黄河&lt;/span&gt;的&lt;span class=\\&quot;high-light\\&quot;&gt;关键性工程&lt;/span&gt;。&lt;span class=\\&quot;high-light\\&quot;&gt;阅读材料回答问题&lt;/span&gt;。 &lt;span class=\\&quot;high-light\\&quot;&gt;材料&lt;/span&gt;一 图a为&lt;span class=\\&quot;high-light\\&quot;&gt;黄河&lt;/span&gt;水系图，图b为&lt;span class=\\&quot;high-light\\&quot;&gt;黄河&lt;/span&gt;流量与含沙量统计...&lt;/div&gt;&quot;, &quot;hotLevel&quot;: 102, &quot;difficulty&quot;: 2, &quot;sourceType&quot;: &quot;question&quot;, &quot;subject&quot;: &quot;地理&quot;, &quot;step&quot;: &quot;高中&quot;, &quot;knowPoint&quot;: &quot;&quot;, &quot;hasVideo&quot;: false, &quot;hasDocument&quot;: true, &quot;viewNum&quot;: &quot;4.9w&quot;, &quot;docPriority&quot;: 4 &#125; ] &#125;&#125; 不难发现，此处的 entityId键值与之前在 URL中看到的 id的键值是一致的，因此，我们猜测它们有一定的关系。 同样的，我们发现了类似的请求片段： 1GET https://easylearn.baidu.com/edu-web-go/shiti/basicinfo?id=1714572139188923485&amp;eqid=&amp;clientType=pc HTTP/1.1 服务端返回的数据是一段 JSON文本： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&#123; &quot;errno&quot;:0, &quot;errmsg&quot;:&quot;success&quot;, &quot;data&quot;:&#123; &quot;answer&quot;:[ &#123; &quot;tag&quot;:&quot;解答&quot;, &quot;desc&quot;:&quot;&lt;div class=&quot;IILbHc&quot;&gt;&lt;div class=&quot;GSfhdv&quot; style=&quot;text-indent:21.0pt;&quot;&gt;成整正织该厂员人&lt;/div&gt;&lt;span&gt;&lt;div class=&quot;GSfhdv&quot; style=&quot;text-indent:21.0pt;&quot;&gt;成整正织该厂员人&lt;/div&gt;[答案]小浪底水利枢纽改变了海陆间水循环的地表径流环节和库区的水汽蒸发环节(2分);调节了下游河段河流流量的季节变化,减少了泥沙对下游河道的沉积,并对河口三角洲海陆变化产生的影响。(3分)&lt;/span&gt;&lt;div class=&quot;GSfhdv&quot; style=&quot;text-indent:21.0pt;&quot;&gt;成整正织该厂员人&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;GSfhdv&quot; style=&quot;text-indent:21.0pt;&quot;&gt;成整正织该厂员人&lt;/div&gt;&quot; &#125; ], &quot;choice&quot;:[ ], &quot;collectNum&quot;:0, &quot;difficulty&quot;:1, &quot;first&quot;:false, &quot;hotLevel&quot;:84.6, &quot;id&quot;:&quot;1714572139188923485&quot;, &quot;isCollect&quot;:0, &quot;isLike&quot;:0, &quot;isShowAnswer&quot;:false, &quot;isShowOcr&quot;:0, &quot;knowList&quot;:[ ], &quot;likeNum&quot;:0, &quot;material&quot;:[ ], &quot;ocrData&quot;:[ ], &quot;query&quot;:&quot;&quot;, &quot;question&quot;:&quot;&lt;div class=&quot;DlYrCn&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;黄河小浪底水利枢纽是治理开发黄河的关键性工程。阅读材料回答问题。(14分)&lt;/span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;div class=&quot;DlYrCn&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;材料一 图A为黄河水系图,图B为黄河流量与含沙量统计图。&lt;/span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;div class=&quot;DlYrCn&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;img class=&quot;img-max&quot; src=&quot;https://tiku-data.cdn.bcebos.com/originalpic/89c12155f5ce077c1ba56d29ff103a25.jpg?auth_key=2320402241-0-0-acd57f0481a5f474e595b0ed62498bc8&quot; style=&quot;width:588.00px;height:209.00px&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;div class=&quot;DlYrCn&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;材料二 黄河小浪底水利枢纽位于黄河中游最后一段峡谷的出口处,以防洪、减淤为主,兼顾供水、灌溉和发电,工程主要由壤土斜心墙堆石坝、泄洪排沙系统和引水发电系统组成。图C为黄河小浪底景观照片。&lt;/span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;div class=&quot;DlYrCn&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;img class=&quot;img-max&quot; src=&quot;https://tiku-data.cdn.bcebos.com/originalpic/66788145983dcc8ef1438b71c9097c6d.jpg?auth_key=2320402241-0-0-19597d773224ff445fb3c8e187c413de&quot; style=&quot;width:239.00px;height:171.00px&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;div class=&quot;DlYrCn&quot;&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;试用水循环原理和地理环境整体性原理说明小浪底水利枢纽的建设对地理环境产生的影响。(5分)&lt;/span&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;uhTjAb&quot; style=&quot;text-indent:21.0pt;&quot;&gt;身整作四值面准近圆&lt;/div&gt;&quot;, &quot;similar&quot;:[ &#123; &quot;id&quot;:&quot;1714572139188923485&quot; &#125;, &#123; &quot;id&quot;:&quot;1714263992328526866&quot; &#125;, &#123; &quot;id&quot;:&quot;1714161626125941121&quot; &#125;, &#123; &quot;id&quot;:&quot;1713953333589690253&quot; &#125;, &#123; &quot;id&quot;:&quot;1728494088442452058&quot; &#125;, &#123; &quot;id&quot;:&quot;1712388657586605084&quot; &#125; ], &quot;step&quot;:&quot;qt&quot;, &quot;stepName&quot;:&quot;&quot;, &quot;strquestion&quot;:&quot;黄河小浪底水利枢纽是治理开发黄河的关键性工程。阅读&quot;, &quot;subList&quot;:[ ], &quot;subject&quot;:&quot;other&quot;, &quot;subjectName&quot;:&quot;&quot;, &quot;testGuideVer&quot;:1, &quot;testMergeVer&quot;:2 &#125;&#125; 由此，我们便获得了相关有效信息的源信息。","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://blog.kuri.ink/tags/Python/"},{"name":"逆向工程","slug":"逆向工程","permalink":"https://blog.kuri.ink/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"},{"name":"Web","slug":"Web","permalink":"https://blog.kuri.ink/tags/Web/"},{"name":"Fiddler","slug":"Fiddler","permalink":"https://blog.kuri.ink/tags/Fiddler/"}]},{"title":"基于Python语言的小项目：Extract From TXT","slug":"基于Python语言的小项目：Extract From TXT","date":"2023-05-09T05:25:03.000Z","updated":"2025-07-15T14:26:57.568Z","comments":true,"path":"posts/基于Python语言的小项目：Extract From TXT/","permalink":"https://blog.kuri.ink/posts/%E5%9F%BA%E4%BA%8EPython%E8%AF%AD%E8%A8%80%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE%EF%BC%9AExtract%20From%20TXT/","excerpt":"✅ 对文本文件具有线性关系的行数对应内容的提取。","text":"✅ 对文本文件具有线性关系的行数对应内容的提取。 基于Python语言. 本脚本文件可以帮助您提取TXT文本文件中具有一定规律的信息. 版本 version 1.0.0 支持的内容 对具有线性关系的行数对应内容的提取(version 1.0.0) 库 linecache 输入格式 1&lt;TXT文件路径&gt; &lt;首定位行数&gt; &lt;步长数&gt; &lt;循环次数&gt; 样例输入 注：先执行 demo.py，在脚本所在目录生成 demo.txt文件. 1demo.txt 1 5 5 样例输出 1234567891011这是第1行.这是第6行.这是第11行.这是第16行.这是第21行.内容共计100行. 源信息 1234567# !/usr/bin/python# -*- coding: utf-8 -*-# @name : Extract_From_TXT/main.py# @author : fly6022# @date : 2022/5/29# @Email : cl@kuri.ink# @license: MIT 解决问题 若程序报错，则是TXT文件的文本编码不是UTF-8，请尝试将文本编码转为UTF-8. 源代码 main.py 1234567891011121314151617181920212223242526272829303132333435363738394041# !/usr/bin/python# -- coding: utf-8 --# @name : Extract_From_TXT/main.py# @author : fly6022# @date : 2022/5/29# @Email : cl@kuri.ink# @license: MITimport linecachefilename,p,q,loop=input().split(' ');p = int(p);q = int(q);loop = int(loop);def main(p,q,loop):PRINT_OR_LIST = &quot;n&quot;count = len(open(filename, encoding='UTF-8').readlines())if int(loop) &gt; count: count,loop = loop,countfor i in range(p, loop, q): with open(filename, encoding=&quot;UTF-8&quot;) as f: for num, line in enumerate(f): if num == i-1: if PRINT_OR_LIST == &quot;Y&quot;: line=line.strip(&quot;\\n&quot;) list=[] list.append(line) print(list) else: print(line) print(&quot;内容共计&quot; + str(loop) + &quot;行.&quot;)main(p,q,loop) demo.py 123456full_path = 'demo' + '.txt'file = open(full_path, encoding='UTF-8')for i in range(1,101,1): output = (&quot;这是第&quot; + str(i) + &quot;行.\\n&quot;) file.write(output)","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"文本编辑","slug":"文本编辑","permalink":"https://blog.kuri.ink/tags/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/"}]},{"title":"一加7：刷入 PixelExperience ROM","slug":"一加7：刷入PixelExperienceROM","date":"2023-01-31T01:57:03.000Z","updated":"2025-07-15T13:31:35.743Z","comments":true,"path":"posts/一加7：刷入PixelExperienceROM/","permalink":"https://blog.kuri.ink/posts/%E4%B8%80%E5%8A%A07%EF%BC%9A%E5%88%B7%E5%85%A5PixelExperienceROM/","excerpt":"OnePlus 7 刷入类原生ROM PixelExperience.","text":"OnePlus 7 刷入类原生ROM PixelExperience. 前言 注意 刷机有风险，成功率不保证是100%，请务必备份好手机数据，并且做好有可能失败的心理准备！本教程不对您刷机产生的一切不良后果负责！ 选择阅读的部分 以下部分为选择性阅读部分，如果您的手机之前已经刷入过其它类型的ROM或未遇到相关问题，可以略过。 安装 Autumn Box（秋之盒）或 Android SDK Platform-Tools 安装 OnePlus USB 驱动并开启手机调试功能 解除 BootLoader[1] 锁【**适用问题：**第一次刷机，或以前刷机后又回锁的情况） 高通 EDL 刷机（9008模式）【**适用问题：**通过官方 OTA 更新到 Color OS 后无法刷入 TWRP 的情况；刷机失败成砖后的补救措施】 注脚内容 必须阅读的部分 除以上说明以外的其它部分。 特别注意的部分 用红色字体框注明的部分，该部分内容您应当特别注意。 下载链接 以下是本文章中所需要的文件：[2] Key Value 秋之盒 https://atmb.sm9.top/AutumnBox/主程序/AutumnBox-2019.4.13.zip OnePlus USB驱动 https://oneplususbdrivers.com/oneplus-7-usb-driver-download/ 高通9008驱动 https://yun.daxiaamu.com/files/tool/高通线刷驱动/高通9008驱动(推荐).exe 9008工具QPST https://www.52pojie.cn/thread-1216032-1-1.html 9008固件 https://yun.daxiaamu.com/OnePlus_Roms_2/一加7/9008线刷救砖包氢OS 11.0.6.1/guacamoleb_14_H.01_220211_repack.zip TWRP（官方） https://dl.twrp.me/guacamolev2/ Oxygen OS 12.1 H32底包 https://yun.daxiaamu.com/OnePlus_Roms_2/一加7/氧OS 12.1 H.32/6393320e5fee4d859dc8e6dcea69e7a9.zip/ PixelExperience（官方） https://download.pixelexperience.org/changelog/guacamoleb/PixelExperience_Plus_guacamoleb-13.0-20230106-1142-OFFICIAL.zip/ 安装Autumn Box（秋之盒）或Android SDK Platform-Tools Autumn Box 点击上方链接，下载安装即可。具体使用参见官网：https://atmb.top/ Android SDK Platform-Tools 点击链接：https://developer.android.google.cn/tools/releases/platform-tools?hl=zh-cn#downloads，前往到下载页面。 点击“下载适用于 Windows 的 SDK Platform-Tools”，勾选“我已阅读并同意上述条款及条件”，点击下载。 解压缩到某个目录，之后添加系统环境变量。 安装 OnePlus USB 驱动并开启手机调试功能 安装 USB 驱动 安装 USB 驱动的目的是让电脑识别手机，从而能够使用ADB对手机进行控制。 打开调试功能 设置 --&gt; 关于手机 --&gt; 版本号（快速点击5次）–&gt; 开发者选项 --&gt; 打开USB调试。 解除 BootLoader 锁 注意 此步骤会清空手机 data 分区，请事先备份好个人数据！ 以下是解锁需要的命令，依次在Powershell（管理员）命令行界面中输入： 123adb devices adb reboot bootloader fastboot oem unlock 各命令含义： 命令 含义 adb devices 判断手机是否连接成功；若输出一串字符，则证明手机连接成功 adb reboot bootloader 重启手机至 fastboot 模式 fastboot oem unlock 解除 Bootloader 锁（该操作会清空手机data分区） 之后手机会弹出一个确认界面，使用音量键勾选确认。 手机自动重启，解锁完毕。 刷入第三方 REC TWRP 12adb reboot bootloader // 重启至 fastboot 模式fastboot boot twrp-3.7.0_12-0-guacamolev2.img // 刷入临时TWRP 稍等5-10秒钟，手机会自动进入Recovery模式. FAQ 无法刷入TWRP或刷入后手机迟迟无反应 一般情况下，升级到 Color OS 之后会出现这种问题，建议尝试较新的TWRP版本重新刷入REC，或是备份手机数据，之后采用9008刷机回到氢OS，再刷入TWRP。 9008刷机教程详见文章底部。 双清，刷入氧OS底包 这是一个重要的环节，一般情况下刷入第三方ROM都需要先刷入底包。 若上一步操作成功，您现在应该已经成功进入了 TWRP。 注意 此步骤会清空手机 data 分区，请事先备份好个人数据！ 确认手机数据已完全备份，点击“Format”，擦除手机data分区。 将下载好的 Oxygen OS 12.1 H32底包 拷贝到手机内置存储目录中，之后点击 TWRP 中的“Install”，找到后缀名为“.zip”的刷机包，安装。 安装完毕后，点击“Reboot”，重启。 刷入PixelExperience ROM 重复步骤 【2.2. 打开调试功能】以及步骤【4. 刷入第三方 REC TWRP】。 注意，此时不需要再清除data分区。 将下载好的 PixelExperience ROM 拷贝到手机内置存储目录中，之后点击 TWRP 中的“Install”，找到后缀名为“.zip”的刷机包，安装。 安装完毕后，点击“Reboot”，重启。 FAQ 重启后手机不进入系统，而是进入Recovery模式 考虑切换A/B分区。（如果目前是A分区，就切换到B，反之，切换到A） 12adb reboot bootloader fastboot set_active b 完成这一步，手机会自动重启到系统。 刷机到此结束！ 完成初始化设置，即可在一加7上使用PixelExperience系统啦。 （补充）9008刷机操作教程 如果你不幸将手机刷成砖，请看以下教程（亦可参考互联网上其它9008教程，步骤大致相似）。 在电脑安装好 高通9008驱动。 将手机关机，同时按住【音量+】及【音量-】键，之后将手机连接电脑。 在电脑上解压 9008 刷机固件。 打开 QFIL。 点击 “Browse”，找到固件路径下的“prog_emmc_firehose_8953_ddr.mbn”文件。 点击 “Load XML&quot;, 找到固件路径下的“patch0.xml”文件，此时会再次弹出一个窗口，点击&quot;rawprogram_unsparse.xml&quot; 点击“Download”，等待手机重启即可。 版权说明及引用说明 文章中提到的TWRP REC、PixelExperience ROM等的版权按照相关开源/闭源协议归其开发者所有。部分资源的下载地址来源为大侠阿木。 TWRP：https://eu.dl.twrp.me/guacamolev2/ PixelExperience：https://forum.xda-developers.com/t/rom-official-guacamoleb-13-pixelexperience-6th-january-2023.4465935/ 大侠阿木：https://yun.daxiaamu.com/ 本文章的官方发布渠道为酷安网(https://coolapk.com/)及本站(https://blog.kuri.ink/)，采用 署名-非商业性使用-禁止演绎 4.0 国际 (CC BY-NC-ND 4.0) 协议进行许可，转载请注明原出处。 Bootloader 锁，即一种对引导加载程序的锁定系统，是手机厂商为了防止用户滥用 Fastboot 或篡改手机官方 Recovery 而设置的一种安全措施。想要刷入第三方ROM，必须解除 BootLoader 锁，晚期的三星、华为、vivo以及OPPO品牌设备解锁较困难，小米、一加等品牌设备解锁相对容易。 ↩︎ 鸣谢：感谢热心读者 @lsqAI 指出文章中的过时内容，现已更正。 ↩︎","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"一加7","slug":"一加7","permalink":"https://blog.kuri.ink/tags/%E4%B8%80%E5%8A%A07/"},{"name":"类原生","slug":"类原生","permalink":"https://blog.kuri.ink/tags/%E7%B1%BB%E5%8E%9F%E7%94%9F/"},{"name":"PixelExperience","slug":"PixelExperience","permalink":"https://blog.kuri.ink/tags/PixelExperience/"},{"name":"ROM","slug":"ROM","permalink":"https://blog.kuri.ink/tags/ROM/"},{"name":"刷机","slug":"刷机","permalink":"https://blog.kuri.ink/tags/%E5%88%B7%E6%9C%BA/"}]},{"title":"JavaScript：Class 学习笔记","slug":"Javascript：Class 学习笔记","date":"2022-08-19T01:54:46.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/Javascript：Class 学习笔记/","permalink":"https://blog.kuri.ink/posts/Javascript%EF%BC%9AClass%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"JavaScript 语言中的 类（class）概念于 ECMAScript 6 （JavaScript 2015）之后被提出，它使得JavaScript 面向对象的编程思想更为鲜明，能够大大增加开发效率。 本文章介绍一些关于类的基本使用方法。","text":"JavaScript 语言中的 类（class）概念于 ECMAScript 6 （JavaScript 2015）之后被提出，它使得JavaScript 面向对象的编程思想更为鲜明，能够大大增加开发效率。 本文章介绍一些关于类的基本使用方法。 定义类 在JavaScript中，定义类共有2种主要的方式，第一种为类声明，第二种为类表达式。 类声明 1class a = &#123;&#125; 类表达式 1const a = class &#123;&#125; 提升 与函数（function）不同，类（class）的声明不会提升，因此，应当先声明类，再访问类。 下面是一个错误示例： ERROR123const a = new a();class a = {} 而下面的，是一个正确示例： todo123class a = {}const a = new a(); 作用域 类受块作用域的限制。因此，在class中声明的 var变量是全局变量，声明的 let变量是局部变量，声明的 const常量是局部常量。 为了便于维护，建议声明变量尽量用let，避免用var。 创建类 创建类的语法格式如下： 12345class className &#123; constructor() &#123; // 代码块 &#125;&#125; 使用类 下面给出一个实例： 12345678910class school_student&#123; constructor(name, school, birth_year, id) &#123; this.student = name; // 姓名 this.school = school; // 学校 this.birth_year = birth_year; // 出生年 this.id = id; // 学号 &#125;&#125;let s_student = new class_1(&quot;小明&quot;, &quot;xx市xx中学&quot;, &quot;2005&quot;, &quot;000015&quot;); 在上面的实例中，我们创建了一个类 school_student，用来表示某市某中学学生信息。 而在使用类时，描述变量通常用 this.变量名的形式。 在将类实例化时，通常使用语句 let new_var_Name = new class_Name()。此处，我们定义一个变量 s_student，将类实例化。 拓展用法 将参数作为对象（Object）引入。 123456789101112131415class school_student&#123; constructor(&#123;name, school, birth_year, id&#125;) &#123; this.student = name; // 姓名 this.school = school; // 学校 this.birth_year = birth_year; // 出生年 this.id = id; // 学号 &#125;&#125;let s_student = new class_1(&#123; student = &quot;小明&quot;, school = &quot;xx市xx中学&quot;, birth_year = &quot;2005&quot;, id = &quot;000015&quot;&#125;); 类的方法 此处依然沿用上方的实例。 1234567891011121314151617class school_student&#123; constructor(name, school, birth_year, id) &#123; this.student = name; // 姓名 this.school = school; // 学校 this.birth_year = birth_year; // 出生年 this.id = id; // 学号 &#125; age() &#123; let date = new date(); return date.getFullYear() - this.birth_year; &#125;&#125;let s_student = new class_1(&quot;小明&quot;, &quot;xx市xx中学&quot;, &quot;2005&quot;, &quot;000015&quot;);s_student.age() // 返回该同学的年龄 与之前不同的是，我们创建了一个名为 age()的方法。 通过之前定义的变量 s_student，我们便可以访问 age()方法。s_student.age()便可以返回该同学的年龄。 事实上，上文中的 constructor()也是一个方法，它是一种特殊的方法，用于创建和初始化在类中创建的对象，被称之为构造函数方法。 类的继承 类的继承使用 extends关键字。类的继承可以依据另一个类来定义一个类。一个已有的类称之为基类（父类），已该类为依据新定义的类称之为派生类（子类）。 我们依然沿用上方实例。 123456789101112131415161718192021222324252627282930class school_student&#123; // 基类 constructor(name, school, birth_year, id) &#123; this.student = name; // 姓名 this.school = school; // 学校 this.birth_year = birth_year; // 出生年 this.id = id; // 学号 &#125; age() &#123; let date = new date(); return date.getFullYear() - this.birth_year; &#125;&#125;let s_student = new class_1(&quot;小明&quot;, &quot;xx市xx中学&quot;, &quot;2005&quot;, &quot;000015&quot;);s_student.age() // 返回该同学的年龄class performance extends school_student&#123; // 派生类 constructor(name, school, birth_year, id)&#123; super(name, school, birth_year, id) this.performance = performance; this.grade = grade; judgement(performance, grade)&#123; return &quot;姓名：&quot; + this.name + &quot;成绩：&quot; + this.performance + &quot;等级：&quot; + this.grade &#125; &#125;&#125;s_student.performance(&quot;90&quot;,&quot;A&quot;) // 实例化（成绩90；等级A）","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://blog.kuri.ink/tags/JavaScript/"}]},{"title":"Golang：项目初始化设置及引入外部包","slug":"Golang：项目初始化设置及引入外部包","date":"2022-08-19T01:26:37.000Z","updated":"2025-07-15T13:31:35.759Z","comments":true,"path":"posts/Golang：项目初始化设置及引入外部包/","permalink":"https://blog.kuri.ink/posts/Golang%EF%BC%9A%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%BE%E7%BD%AE%E5%8F%8A%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8%E5%8C%85/","excerpt":"Golang 项目初始化设置及引入外部包","text":"Golang 项目初始化设置及引入外部包 项目初始化设置 在项目的根目录，输入： 1go init tidy 之后，根目录会自动生成一个 go.mod文件。 引入外部包 Golang 更新至 1.13 版本之后，支持了 go module功能。在引入外部包时，应先对配置文件进行修改： 1go env -w GO111MODULE=on 同时，可引入代理服务器，以方便后续的开发工作： 1go env -w GOPROXY=https://goproxy.cn,direct 在引入外部包时，现在程序（.go文件）中的头部添加： 123import ( &quot;github.com/xxx/xxx&quot;) 之后在终端键入： 1go get github.com/xxx/xxx 由此，我们已经完成了外部包的引入。","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Golang","slug":"Golang","permalink":"https://blog.kuri.ink/tags/Golang/"}]},{"title":"Javascript：XMLHttpRequest请求API实例","slug":"Javascript：XMLHttpRequest请求API实例","date":"2022-06-03T14:24:50.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/Javascript：XMLHttpRequest请求API实例/","permalink":"https://blog.kuri.ink/posts/Javascript%EF%BC%9AXMLHttpRequest%E8%AF%B7%E6%B1%82API%E5%AE%9E%E4%BE%8B/","excerpt":"","text":"API（应用程序接口）在前端开发过程中起到了举足轻重的作用，利用Web API中的 XMLHttpRequest对象可以便于我们对API的调用。请求API的方式有很多，本文为大家提供一个比较简单的范例。 本文内容所用语言若无特别说明均为JavaScript，且本文所提供的方法作用域不包含IE浏览器这类比较老旧的浏览器。 首先，构造一个函数 XMLHttpRequest()得到实例对象。 1XHR = new XMLHttpRequest(); 其次，调用 open()方法，该方法提供了三个参数：请求类型（GET和 POST等）、请求的目标链接（也就是我们需要请求的API地址）以及是否发送异步请求的布尔值（由于 XMLHttpRequest默认为异步请求，所以该布尔值默认为 true）。 这里以“API服务,天气API - 帮!”网站提供的天气API接口作为例子，它支持使用GET方法调用，并且不需要Token。 该API的接口地址为 //api.help.bj.cn/apis/weather/?id=101060101，id为城市代码（长春）。 1XHR.open(&#x27;GET&#x27;, &#x27;//api.help.bj.cn/apis/weather/?id=101060101&#x27;); 事实上，大多数情况下，为了适应更多情况，我们是这样写的： 123citycode = &#x27;101060101&#x27;; // 假设citycode是通过表单提交的 XHR.open(&#x27;GET&#x27;, &#x27;//api.help.bj.cn/apis/weather/?id=&#x27; + String(citycode), true); 之后发送一个 null 参数。 1XHR.send(null); 使用Javascript的 JSON.parse()方法处理传入的JSON数据。 1234567XHR.onload = function() &#123; json = JSON.parse(XHR.response) console.log(json); &#125; 正常情况下，获取到的数据格式（XHR.response）应为：（以下格式内容来自API官网，为示例内容） 12345678910111213141516171819202122232425&#123; &quot;status&quot;: &quot;0&quot;, //反馈代码 0成功 &quot;msg&quot;: &quot;反馈信息&quot;, //反馈信息 &quot;cityen&quot;: &quot;changchun&quot;, //城市名称英文 &quot;city&quot;: &quot;长春&quot;, //城市名称 &quot;citycode&quot;: &quot;101060101&quot;, //城市编码 &quot;temp&quot;: &quot;10&quot;, //实时温度 &quot;tempf&quot;: &quot;50&quot;, //华氏温度 &quot;wd&quot;: &quot;西风&quot;, //风向 &quot;wden&quot;: &quot;W&quot;, //风向英文 &quot;wdforce&quot;: &quot;3级&quot;, //风力 &quot;wdspd&quot;: &quot;&lt;12km/h&quot;, //风速 &quot;uptime&quot;: &quot;12:00&quot;, //更新时间 &quot;weather&quot;: &quot;晴&quot;, //天气状况 &quot;weatheren&quot;: &quot;Sunny&quot;, //天气状况英文 &quot;weatherimg&quot;: &quot;d00&quot;, //天气状况图标 &quot;stp&quot;: &quot;994&quot;, //气压 &quot;wisib&quot;: &quot;35000&quot;, //能见度 &quot;humidity&quot;: &quot;46%&quot;, //湿度 &quot;prcp&quot;: &quot;0&quot;, //降雨 &quot;prcp24h&quot;: &quot;2.2&quot;, //24小时降雨量 &quot;aqi&quot;: &quot;22&quot;, //AQI &quot;pm25&quot;: &quot;20&quot;, //PM2.5 &quot;today&quot;: &quot;10月17日(星期一)&quot; //今天日期&#125; 处理过后的 json（将其转换为了对象）： 1Object &#123; status: &quot;0&quot;, cityen: &quot;changchun&quot;, city: &quot;长春&quot;, citycode: &quot;101060101&quot;, temp: &quot;19&quot;, tempf: &quot;66&quot;, wd: &quot;东南风&quot;, wden: &quot;SE&quot;, wdenimg: &quot;//www.help.bj.cn/weather/images/wind/se.png&quot;, wdforce: &quot;2级&quot;, … &#125; 下面是范例代码的全部内容： 123456789101112131415XHR = new XMLHttpRequest(); citycode = &#x27;101060101&#x27;; // 假设citycode是通过表单提交的 XHR.open(&#x27;GET&#x27;, &#x27;//api.help.bj.cn/apis/weather/?id=&#x27; + String(citycode), true); XHR.send(null); XHR.onload = function() &#123; json = JSON.parse(XHR.response) console.log(json); &#125;","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Ajax","slug":"Ajax","permalink":"https://blog.kuri.ink/tags/Ajax/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://blog.kuri.ink/tags/JavaScript/"}]},{"title":"Hexo：表格渲染错误问题的解决","slug":"Hexo：文章表格渲染错误问题的解决","date":"2022-02-19T05:00:39.041Z","updated":"2025-07-15T13:31:35.749Z","comments":true,"path":"posts/Hexo：文章表格渲染错误问题的解决/","permalink":"https://blog.kuri.ink/posts/Hexo%EF%BC%9A%E6%96%87%E7%AB%A0%E8%A1%A8%E6%A0%BC%E6%B8%B2%E6%9F%93%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/","excerpt":"hexo-renderer-kramed渲染器渲染表格时错误问题的解决。","text":"hexo-renderer-kramed渲染器渲染表格时错误问题的解决。 最近在将Hexo博客升级的时候，发现博客网页中的表格渲染有问题： 经过排查，发现与主题无关，我认为是渲染器出了问题。 在浏览器F12界面进行调试发现： 将 &lt;table&gt;标签外面的 &lt;div class=&quot;table-container&gt;&quot;删除，表格恢复正常。 前往博客根目录，在地址栏键入：&lt;根目录文件夹&gt;\\node_modules\\hexo-renderer-kramed\\lib 将 renderer.js用编辑器打开，并将其中的第 35-47行： 12345678910111213// Add table-container div to set overflow-x: autoRenderer.prototype.table = function(header, body) &#123; return &#x27;&lt;div class=&quot;table-container&quot;&gt;\\n&#x27; + &#x27;&lt;table&gt;\\n&#x27; + &#x27;&lt;thead&gt;\\n&#x27; + header + &#x27;&lt;/thead&gt;\\n&#x27; + &#x27;&lt;tbody&gt;\\n&#x27; + body + &#x27;&lt;/tbody&gt;\\n&#x27; + &#x27;&lt;/table&gt;\\n&#x27; + &#x27;&lt;/div&gt;\\n&#x27;;&#125;; 更改为： 12345678910111213141516171819202122232425/*// Add table-container div to set overflow-x: autoRenderer.prototype.table = function(header, body) &#123; return &#x27;&lt;div class=&quot;table-container&quot;&gt;\\n&#x27; + &#x27;&lt;table&gt;\\n&#x27; + &#x27;&lt;thead&gt;\\n&#x27; + header + &#x27;&lt;/thead&gt;\\n&#x27; + &#x27;&lt;tbody&gt;\\n&#x27; + body + &#x27;&lt;/tbody&gt;\\n&#x27; + &#x27;&lt;/table&gt;\\n&#x27; + &#x27;&lt;/div&gt;\\n&#x27;;&#125;;*/// Add table-container div to set overflow-x: autoRenderer.prototype.table = function(header, body) &#123; return &#x27;&lt;table&gt;\\n&#x27; + &#x27;&lt;thead&gt;\\n&#x27; + header + &#x27;&lt;/thead&gt;\\n&#x27; + &#x27;&lt;tbody&gt;\\n&#x27; + body + &#x27;&lt;/tbody&gt;\\n&#x27; + &#x27;&lt;/table&gt;\\n&#x27;&#125;; 即可。 在博客根目录打开 git bash命令行界面，键入： 1hexo clean &amp;&amp; hexo s 在 localhost:4000刷新网页，即可使渲染恢复正常。 – END","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.kuri.ink/tags/Hexo/"},{"name":"hexo-renderer-kramed","slug":"hexo-renderer-kramed","permalink":"https://blog.kuri.ink/tags/hexo-renderer-kramed/"}]},{"title":"树莓派：安装Ubuntu Server 20.04 LTS (Arm64)","slug":"树莓派：安装Ubuntu Server 20.04 LTS (Arm64)","date":"2021-05-29T11:03:17.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/树莓派：安装Ubuntu Server 20.04 LTS (Arm64)/","permalink":"https://blog.kuri.ink/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%9A%E5%AE%89%E8%A3%85Ubuntu%20Server%2020.04%20LTS%20(Arm64)/","excerpt":"树莓派安装 Ubuntu Server 20.04 LTS (Arm64)","text":"树莓派安装 Ubuntu Server 20.04 LTS (Arm64) info本教程仅适用于 Raspberry Pi 4B，安装的Ubuntu版本为Ubuntu Server 20.04 LTS (Arm64) 需要准备 硬件 Raspberry 4B Micro SD Card（≥16GB) RJ45网线（超5类及以上） 软件 balenaEtcher PUTTY 下载镜像 官网下载 烧录镜像 打开【balenaEtcher】软件。 加载SD卡和镜像之后烧录。 连接Wifi 将SD卡重新插入到电脑，进入【此电脑】，打开SD卡根目录。 新建文件“wpa_supplicant.conf”。 键入以下内容（汉字部分需要修改）： 123456789country=CNctrl_interface=DIR=/var/run/wpa_supplicantGROUP=netdevupdate_config=1network=&#123; ssid=&quot;Wifi名称&quot; psk=&quot;Wifi密码&quot; key_mgmt=WPA-PSK（加密方式） priority=1&#125; 初始化 配置好Wifi后，将SD卡插入到树莓派，上电开机。 等待一段时间，打开路由器页面 查看树莓派的IP地址。 打开【PUTTY】软件。 键入初始化账户密码（账户：Ubuntu；密码：Ubuntu） 之后修改密码。 更换软件源 获取管理员权限。 1sudo su 用vi编辑器编辑文件。 1vi /etc/apt/sources.list 将文件内容替换为： 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse :wq，保存。 刷新软件源： 12sudo apt-get updatesudo apt-get upgrade 配置raspi-config 可选择的操作 安装图形界面 bash sudo apt-get install ubuntu-desktop 配置远程连接（基于Xrdp协议） bash sudo apt install xrdp 安装依赖文件 1sudo apt install whiptail parted lua5.1 alsa-utils psmisc 下载官网deb程序 1wget http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20191021_all.deb 安装软件 1sudo dpkg -i raspi-config_20191021_all.deb 运行 1sudo raspi-config Ubuntu安装完成","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"https://blog.kuri.ink/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.kuri.ink/tags/Ubuntu/"},{"name":"Raspberry","slug":"Raspberry","permalink":"https://blog.kuri.ink/tags/Raspberry/"}]},{"title":"Javascript：Ajax 同源策略限制问题的解决","slug":"Javascript：Ajax同源策略限制问题的解决","date":"2021-03-07T01:29:22.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/Javascript：Ajax同源策略限制问题的解决/","permalink":"https://blog.kuri.ink/posts/Javascript%EF%BC%9AAjax%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E9%99%90%E5%88%B6%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/","excerpt":"Ajax 同源策略限制问题的解决。","text":"Ajax 同源策略限制问题的解决。 写在前面 首先，我们要了解，何为『同源策略』。 同源策略是一个重要的安全策略，它用于限制一个origin的文档或者它加载的脚本如何能与另一个源的资源进行交互。它能帮助阻隔恶意文档，减少可能被攻击的媒介。 如果两个 URL 的 protocol、port (如果有指定的话)和 host 都相同的话，则这两个 URL 是同源。这个方案也被称为“协议/主机/端口元组”，或者直接是 “元组”。（“元组” 是指一组项目构成的整体，双重/三重/四重/五重/等的通用形式）。 —— MDN官方文档 例如： URL 结果 原因 http://a.com/1.html 同源 只有路径不同 http://a.com/src/2.html 同源 只有路径不同 https://a.com/3.html 失败 协议不同 http://a.com:81/4.html 失败 端口不同(http默认端口是80) http://b.com/1.html 失败 主机不同 总结一下，满足 &lt;u&gt;同源 &lt;/u&gt;的条件： 主机相同 端口相同 协议相同 三者缺一不可。 解决方法 我们已经了解了『同源策略』的基本概念，虽然说，它是一种浏览器主动的安全策略，但是，却时常给我们的前端开发造成了困难。 那么，我们如何解决『同源策略』给我们带来的不便呢？ 比较推荐的方法有两种。 JSONP JSONP 是利用html标签不受『同源策略』限制的影响，从而达到解决『同源策略』限制的目的。通俗来讲，叫“曲线救国”。 这种方法的好处是： 比较简单 兼容性较好（较老版本的浏览器也支持） 不必对服务器端进行配置（或配置相对较少） 但是，这种方法有一定的局限性：它仅支持GET方式请求数据。 基本原理 在网页添加一个 &lt;script&gt;元素，再向服务器请求JSON数据。服务器收到请求后，将数据存放在一个指定的回调函数 callback()里。 CORS（跨域资源共享） 这种方法允许浏览器向跨源服务器发出 XMLHttpRequest请求，从而克服了同源策略的限制。 好处是： 较方便配置 兼容所有请求方式 局限性是： 较老版本的浏览器可能不支持 需要在服务器端配置 基本原理（仅针对简单请求：HEAD、GET、POST） 对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个 Origin字段。 下面是一个例子，浏览器发现这次跨源AJAX请求是简单请求，就自动在头信息之中，添加一个 Origin字段。 123456GET /cors HTTP/1.1Origin: http://api.bob.comHost: api.alice.comAccept-Language: en-USConnection: keep-aliveUser-Agent: Mozilla/5.0... 上面的头信息中，Origin字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求。 如果 Origin指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现，这个回应的头信息没有包含 Access-Control-Allow-Origin字段（详见下文），就知道出错了，从而抛出一个错误，被 XMLHttpRequest的 onerror回调函数捕获。注意，这种错误无法通过状态码识别，因为HTTP回应的状态码有可能是200。 如果 Origin指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。 1234Access-Control-Allow-Origin: http://api.bob.comAccess-Control-Allow-Credentials: trueAccess-Control-Expose-Headers: FooBarContent-Type: text/html; charset=utf-8 1. MDN官方文档(https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy): Jesse Ruderman 2. 阮一峰.跨域资源共享CORS详解[EB/OL]. (2016-4-12)[2021-03-07].http://www.ruanyifeng.com/blog/2016/04/cors.html - 许可证:自由转载-非商用-非衍生-保持署名(创意共享3.0许可证).","categories":[{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"https://blog.kuri.ink/tags/Javascript/"},{"name":"Ajax","slug":"Ajax","permalink":"https://blog.kuri.ink/tags/Ajax/"}]},{"title":"树莓派：搭建Minecraft服务器","slug":"树莓派：搭建Minecraft服务器","date":"2021-01-26T10:58:13.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/树莓派：搭建Minecraft服务器/","permalink":"https://blog.kuri.ink/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%9A%E6%90%AD%E5%BB%BAMinecraft%E6%9C%8D%E5%8A%A1%E5%99%A8/","excerpt":"树莓派搭建Minecraft服务器。","text":"树莓派搭建Minecraft服务器。 本文章适合的情况 希望搭建一个属于自己的同学、基友服务器，对服务器配置要求不太高 希望开一个7*24小时服务器却又担心电费问题 平时玩游戏时间不多，租用服务器觉得不划算 注意事项 树莓派的配置不高且高负荷工作时发热较严重，推荐搭配散热片及散热风扇来使用。 树莓派的稳定性较差，仅适用于搭建个人小型服务器，不要跑图或者设置在线人数过多。 本文章需要有一定的技术基础，小白请先了解相关知识。 本教程一些步骤不单单局限于树莓派，可拓展至大部分安装有Linux系统的硬件设备。 你需要准备 安装好系统（建议图形界面）且可以联网的树莓派（此处使用的是Ubuntu 20.04 LTS Arm64系统） 公网映射软件（如：Sakura FRP等），局域网开服可略过。 一台能远程控制树莓派的手机/电脑 开始搭建 安装Java 和客户端一样，服务端也需要Java的支持，请按照以下命令来安装Java： 1sudo apt-get install openjdk-16-jdk 下载开服核心 首先，搭建Minecraft服务器需要一个开服核心，这是搭建Minecraft服务器的必由之路。 这里，我推荐使用Spigot（水龙头）核心，原因是这个核心比较稳定，并且适合配置较低的设备。当然，你也可以使用其它核心，比如bukkit。 访问Getbukkit，下载你需要版本的核心。 核心是一个 .jar文件,此处我使用的核心适用于Minecraft Java版 1.15.2。 配置服务器环境 在存有核心文件的目录新建一个 run.sh文件，该文件作为服务器的启动脚本。 打开文件，在文本编辑器输入以下内容： 1sudo java -Xms768M -Xmx2048M -jar /root/Desktop/Minecraft_server/Server_3/[核心名称].jar nogui 其中，文件路径根据具体情况而定。 sudo：以管理员身份执行 -Xms768M：程序运行时最小内存为768M -Xmx2048M：程序运行时最大内存为2048M nogui：即No GUI，无图形界面，可节省内存 之后保存文件。 在终端输入命令： 123cd /root/Desktop/Minecraft_server/Server_3/sh run.sh 回车。 命令执行结束，会发现在文件夹中多了几个文件。 打开文件夹中的 eula.txt，将 eula的参数由 false改为 true。 保存。 接着，打开文件夹中的 server.properties文件（该文件是服务器的配置文件）。 参考Minecraft Wiki.以下是各参数的实际含义： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#Minecraft server properties#Wed Jan 27 16:46:05 CST 2021broadcast-rcon-to-ops=true # 广播RCON信息给OPview-distance=10 # 视野距离max-build-height=256 # 建筑最大高度，最大值65534server-ip= # 服务器IP（可留空或填localhost）level-seed= # 地图种子rcon.port=25575 # 可忽略，RCON远程连接协议端口gamemode=survival # 游戏模式server-port=25565 # 游戏端口，根据个人情况设置，可保持默认值25565allow-nether=true # 开放地狱enable-command-block=false # 开启命令方块enable-rcon=false # 开启RCON功能，建议不开启enable-query=false # 允许使用 GameSpy4 协议的服务器监听器op-permission-level=4 # OP等级，最大值为4，等同于控制台权限prevent-proxy-connections=false # 检测异地登陆并阻止进入游戏generator-settings= # 生成器设置resource-pack= # 服务器使用资源包设置level-name=world # 地图名称rcon.password= # RCON密码，若不开启RCON功能可忽略player-idle-timeout=0 # 挂机检测，0表示不开启，单位为分钟motd=A Minecraft Server # 服务器标题，要求使用Unicode格式文字query.port=25565 # Query端口，若不开启Query可忽略debug=false # 调试模式force-gamemode=false # 强制游戏模式hardcore=false # 极限生存white-list=false # 白名单broadcast-console-to-ops=true # 广播控制台信息给OPpvp=true # 玩家攻击spawn-npcs=true # 生成村民generate-structures=true # 生成建筑spawn-animals=true # 生成动物snooper-enabled=true # 允许采集服务器信息difficulty=easy # 强制难度选项function-permission-level=2 # 默认权限等级network-compression-threshold=256 # 数据包压缩大小level-type=default # 种子类型spawn-monsters=true # 生成怪物max-tick-time=60000 # 服务器最大崩溃等待响应时间，单位毫秒enforce-whitelist=false # 强制白名单use-native-transport=true # 针对Linux的优化max-players=20 # 最大玩家数量resource-pack-sha1= # 资源包验证，使用哈希加密SHA1spawn-protection=16 # 出生点保护online-mode=true # 在线模式（正版模式）allow-flight=false # 允许飞行max-world-size=29999984 # 世界生成上限 配置并保存后，再次运行启动脚本。 1sh run.sh 稍等片刻。 待命令行出现 Done时，即表示我们的服务器已经在本地成功运行了。 不过，想要邀请你的好朋友一起来玩服务器，还差最后一步——配置公网映射，在这里建议使用Sakura FRP.","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"Minecraft","slug":"Minecraft","permalink":"https://blog.kuri.ink/tags/Minecraft/"},{"name":"服务器","slug":"服务器","permalink":"https://blog.kuri.ink/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"记一次博客优化","slug":"记一次博客优化","date":"2020-12-26T10:00:31.000Z","updated":"2025-07-15T13:31:35.744Z","comments":true,"path":"posts/记一次博客优化/","permalink":"https://blog.kuri.ink/posts/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/","excerpt":"233，本次博客优化主要对网站的层叠样式表（CSS）以及字体方面做了微调。","text":"233，本次博客优化主要对网站的层叠样式表（CSS）以及字体方面做了微调。 🎨 层叠样式表 为了使页面更快响应，我对网站的层叠样式表做了微调及压缩：目前CSS文件的大小由原来的 243 KB 变为了 221 KB 。 经过本地测试，网站首页CSS的响应速度为 33.96 ms 。 在分页测试中，CSS的响应速度为 11.92 ms。 实际表现虽然不是很理想，但还是比以往要快的。不过受制于CloudFlare CDN的速度，上云的实际速度会比本地测试慢。 ✏ 字体 字体方面，由以往单一的 &lt;i&gt;思源黑体 &lt;/i&gt; 拓展到 &lt;b&gt;思源黑体+思源宋体+Roboto字体 &lt;/b&gt; 一并使用。 网站主体部分以及博客文章方面，标题使用思源宋体（font-weight值为 800），正文使用思源黑体 + Roboto字体（font-weight值为 300）。 字体对比 Google Fonts 12345&lt;link rel=&quot;stylesheet&quot; href=&quot;https://fonts.googleapis.com/css?family=Noto+Sans+SC:100,200,300,400,500,700,800,900&quot;&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://fonts.googleapis.com/css?family=Noto+Serif+SC:100,200,300,400,500,700,800,900&quot;&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://fonts.googleapis.com/css?family=Roboto:100,200,300,400,500,700,800,900&quot;&gt; 功能测试区 Mermaid Flowchart flowchart TD A[Christmas] --&gt;|Get money| B(Go shopping) B --&gt; C{Let me think} C --&gt;|One| D[Laptop] C --&gt;|Two| E[iPhone] C --&gt;|Three| F[fa:fa-car Car] Emojis 😃 Mathjax $$ A = \\begin{bmatrix} a_{11} &amp; a_{12} &amp; … &amp; a_{1n}\\ a_{21} &amp; a_{22} &amp; … &amp; a_{2n}\\ a_{31} &amp; a_{22} &amp; … &amp; a_{3n}\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots\\ a_{n1} &amp; a_{n2} &amp; … &amp; a_{nn}\\ \\end{bmatrix} , b = \\begin{bmatrix} b_{1} \\ b_{2} \\ b_{3} \\ \\vdots \\ b_{n} \\ \\end{bmatrix} $$","categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://blog.kuri.ink/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"随便写写","slug":"随便写写","permalink":"https://blog.kuri.ink/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"},{"name":"编程开发","slug":"编程开发","permalink":"https://blog.kuri.ink/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"AI","slug":"AI","permalink":"https://blog.kuri.ink/tags/AI/"},{"name":"Deepseek","slug":"Deepseek","permalink":"https://blog.kuri.ink/tags/Deepseek/"},{"name":"Ollama","slug":"Ollama","permalink":"https://blog.kuri.ink/tags/Ollama/"},{"name":"AMD","slug":"AMD","permalink":"https://blog.kuri.ink/tags/AMD/"},{"name":"RX590","slug":"RX590","permalink":"https://blog.kuri.ink/tags/RX590/"},{"name":"ROCm","slug":"ROCm","permalink":"https://blog.kuri.ink/tags/ROCm/"},{"name":"HAM","slug":"HAM","permalink":"https://blog.kuri.ink/tags/HAM/"},{"name":"业余无线电","slug":"业余无线电","permalink":"https://blog.kuri.ink/tags/%E4%B8%9A%E4%BD%99%E6%97%A0%E7%BA%BF%E7%94%B5/"},{"name":"UV-K6","slug":"UV-K6","permalink":"https://blog.kuri.ink/tags/UV-K6/"},{"name":"一加7","slug":"一加7","permalink":"https://blog.kuri.ink/tags/%E4%B8%80%E5%8A%A07/"},{"name":"刷机","slug":"刷机","permalink":"https://blog.kuri.ink/tags/%E5%88%B7%E6%9C%BA/"},{"name":"救砖","slug":"救砖","permalink":"https://blog.kuri.ink/tags/%E6%95%91%E7%A0%96/"},{"name":"树莓派","slug":"树莓派","permalink":"https://blog.kuri.ink/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"},{"name":"配置文件","slug":"配置文件","permalink":"https://blog.kuri.ink/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"},{"name":"HDMI","slug":"HDMI","permalink":"https://blog.kuri.ink/tags/HDMI/"},{"name":"超频","slug":"超频","permalink":"https://blog.kuri.ink/tags/%E8%B6%85%E9%A2%91/"},{"name":"IPv6","slug":"IPv6","permalink":"https://blog.kuri.ink/tags/IPv6/"},{"name":"docker","slug":"docker","permalink":"https://blog.kuri.ink/tags/docker/"},{"name":"DDNS","slug":"DDNS","permalink":"https://blog.kuri.ink/tags/DDNS/"},{"name":"ddns-go","slug":"ddns-go","permalink":"https://blog.kuri.ink/tags/ddns-go/"},{"name":"内网穿透","slug":"内网穿透","permalink":"https://blog.kuri.ink/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"name":"Cloudflare","slug":"Cloudflare","permalink":"https://blog.kuri.ink/tags/Cloudflare/"},{"name":"中国电信","slug":"中国电信","permalink":"https://blog.kuri.ink/tags/%E4%B8%AD%E5%9B%BD%E7%94%B5%E4%BF%A1/"},{"name":"网络","slug":"网络","permalink":"https://blog.kuri.ink/tags/%E7%BD%91%E7%BB%9C/"},{"name":"Spyder","slug":"Spyder","permalink":"https://blog.kuri.ink/tags/Spyder/"},{"name":"Python","slug":"Python","permalink":"https://blog.kuri.ink/tags/Python/"},{"name":"逆向工程","slug":"逆向工程","permalink":"https://blog.kuri.ink/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"},{"name":"Web","slug":"Web","permalink":"https://blog.kuri.ink/tags/Web/"},{"name":"Fiddler","slug":"Fiddler","permalink":"https://blog.kuri.ink/tags/Fiddler/"},{"name":"文本编辑","slug":"文本编辑","permalink":"https://blog.kuri.ink/tags/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/"},{"name":"类原生","slug":"类原生","permalink":"https://blog.kuri.ink/tags/%E7%B1%BB%E5%8E%9F%E7%94%9F/"},{"name":"PixelExperience","slug":"PixelExperience","permalink":"https://blog.kuri.ink/tags/PixelExperience/"},{"name":"ROM","slug":"ROM","permalink":"https://blog.kuri.ink/tags/ROM/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://blog.kuri.ink/tags/JavaScript/"},{"name":"Golang","slug":"Golang","permalink":"https://blog.kuri.ink/tags/Golang/"},{"name":"Ajax","slug":"Ajax","permalink":"https://blog.kuri.ink/tags/Ajax/"},{"name":"Hexo","slug":"Hexo","permalink":"https://blog.kuri.ink/tags/Hexo/"},{"name":"hexo-renderer-kramed","slug":"hexo-renderer-kramed","permalink":"https://blog.kuri.ink/tags/hexo-renderer-kramed/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.kuri.ink/tags/Ubuntu/"},{"name":"Raspberry","slug":"Raspberry","permalink":"https://blog.kuri.ink/tags/Raspberry/"},{"name":"Javascript","slug":"Javascript","permalink":"https://blog.kuri.ink/tags/Javascript/"},{"name":"Minecraft","slug":"Minecraft","permalink":"https://blog.kuri.ink/tags/Minecraft/"},{"name":"服务器","slug":"服务器","permalink":"https://blog.kuri.ink/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"博客","slug":"博客","permalink":"https://blog.kuri.ink/tags/%E5%8D%9A%E5%AE%A2/"}]}